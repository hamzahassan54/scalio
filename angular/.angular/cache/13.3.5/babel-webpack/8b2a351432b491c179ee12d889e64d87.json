{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PostsService = /*#__PURE__*/(() => {\n  class PostsService {\n    constructor(http) {\n      this.http = http;\n      this.apiURL = 'http://localhost:8080';\n    } // getPosts(id: any): Observable<any> {\n    //   console.log(this.apiURL + '/posts/' + id)\n    //   return this.http.get(this.apiURL + '/posts/' + id);\n    // }\n\n\n    getPosts(id) {\n      return this.http.get(this.apiURL + '/posts/' + id).pipe(catchError(error => {\n        let errorMsg;\n\n        if (error.error instanceof ErrorEvent) {\n          errorMsg = `Error: ${error.error.message}`;\n        } else {\n          errorMsg = this.getServerErrorMessage(error);\n        }\n\n        return throwError(() => new Error(errorMsg));\n      }));\n    }\n\n    getServerErrorMessage(error) {\n      switch (error.status) {\n        case 404:\n          {\n            return `Not Found: ${error.message}`;\n          }\n\n        case 403:\n          {\n            return `Access Denied: ${error.message}`;\n          }\n\n        case 500:\n          {\n            return `Internal Server Error: ${error.message}`;\n          }\n\n        default:\n          {\n            return `Unknown Server Error: ${error.message}`;\n          }\n      }\n    }\n\n  }\n\n  PostsService.ɵfac = function PostsService_Factory(t) {\n    return new (t || PostsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  PostsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PostsService,\n    factory: PostsService.ɵfac,\n    providedIn: 'root'\n  });\n  return PostsService;\n})();","map":null,"metadata":{},"sourceType":"module"}